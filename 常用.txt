分类：

新增|0|admin/catregory/add|1|模块管理
编辑|0|admin/catregory/edit|1|模块管理
删除|0|admin/category/destroy|1|模块管理
更新|0|admin/category/update|1|模块管理


1342234898蜀国微信群欢迎各位新老玩家，这里有礼包、红包，还有各种老司机

关于新增和更新的说明：
save()方法即可用作新增也可用作更新，
create(array())方法用作新增，update(array())方法用作更新，array()可以是$request->all(），也可以是Input::get();因为是等价的
$fillable白名单$guarded黑名单，定义在$fillable中的属性可以通过批量赋值进行赋值，而定义在$guarded中的属性在批量赋值时会被过滤掉，新增和更新都会生效
当save()方法用于更新模型时，要更新模型数据，先要获取该模型实例，然后修改模型属性，再调用save方法保存即可

模型：
标准的更新/新增方法统一

   /**
     * 更新/新增操作
     * @param $request
     * @return $this
     */
    protected function updateData($request){
        if(empty($request->id)){
            //新增
            //fill是根据$fillable进行字段过滤的，防止非法字段提交，并把模型属性赋值给$this这个模型实例
	    //由于save方法并非批量赋值，所以不会触发黑白名单的过滤，只有create和update进行批量赋值操作才会触发，所以需要fill对模型属性进行过滤
            $this->fill($request->all());
            $result = $this->save();
        }else{
            //更新
            $instance = $this->find($request->id);//获取模型实例
            if(empty($instance)){
                return false;
            }
            $result = $instance->update($request->all());
        }
        if($result === false){
            return false;
        }
        return $request->all();
    }

控制器
新增
修改:
   /**
     * 编辑
     * @param $id
     * @return
     */
    public function edit($id){
        if(empty($id) ||!is_numeric($id)){
            return redirect()->back()->with('error','参数错误！');
        }
        $info = CategoryExtra::find($id);
        if(empty($info)){
            return redirect()->back()->with('error','抱歉，你要查找的数据不存在！');
        }else{
            $info =  $info->toArray();
        }
        return view('admin.attribute.binding_create',compact('info'));
    }

更新：
   /**
     * 更新绑定扩展字段
     * @param Request $request
     * @return
     */
    public function update(Request $request){
        $resault = Model::updateData($request);
        if($resault){
            return redirect(url('admin/attribute/binding',[$res['category']]))->withSuccess(isset($resault['id'])?'修改成功':'新增成功');
        }else{
            return redirect()->back()->with('error',isset($resault['id'])?'修改失败':'新增失败');
        }
    }

删除：
    /**
     * 删除
     * @param $id
     * @return
     */
    public function destroyBinding($id){
        $result = CategoryExtra::destroy($id);
        if($result){
            return redirect()->back()->withSuccess('删除成功！');
        }else{
            return redirect()->back()->with('error','删除失败！');
        }
    }

























